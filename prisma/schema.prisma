// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Warehouse {
  id                    Int       @id @default(autoincrement())
  warehouseOwnerType    String?
  warehouseType         String
  address               String    @db.Text
  googleLocation        String?
  city                  String
  state                 String
  postalCode            String?
  zone                  String    
  contactPerson         String
  contactNumber         String
  totalSpaceSqft        Int[]     // <-- CHANGED
  offeredSpaceSqft      String?   // <-- CHANGED
  numberOfDocks         String?   
  clearHeightFt         String?   
  compliances           String    
  otherSpecifications   String?   @db.Text
  ratePerSqft           String    
  availability          String?   
  uploadedBy            String
  isBroker              String?   
  photos                String?   

  createdAt             DateTime? @default(now())
  statusUpdatedAt       DateTime? @updatedAt @map("status_updated_at")
  
  // Relation to WarehouseData
  warehouseData         WarehouseData?
}

model MessageLog {
  id            Int      @id @default(autoincrement())
  receivedAt    DateTime @default(now()) @map("received_at")
  senderNumber  String   @map("sender_number")
  messageBody   String   @db.Text @map("message_body")
  status        String
  errorMessage  String?  @db.Text @map("error_message")
  imageUrl      String?  @map("image_url")
}

model VerifiedNumber {
  id           Int      @id @default(autoincrement())
  phoneNumber  String   @unique @map("phone_number")
  name         String
  isActive     Boolean  @default(true) @map("is_active")
  createdAt    DateTime @default(now()) @map("created_at")
}

// --- NEW DRAFT TABLE ADDED BELOW ---

model Draft {
  senderNumber    String   @id @map("sender_number")
  status          String   // e.g., 'awaiting_images'
  warehouseData   Json     @map("warehouse_data")
  imageUrls       String[] @map("image_urls")
  createdAt       DateTime @default(now()) @map("created_at")
}

model WarehouseData {
  id                  Int       @id @default(autoincrement())
  latitude            Float?
  longitude           Float?
  
  // Prisma doesn't natively support the 'vector' type, so we use 'Unsupported'.
  // 1536 is the dimension for OpenAI's text-embedding-3-small model.
  embedding           Unsupported("vector(1536)")?

  // The new fields you added
  fireNocAvailable    Boolean?
  fireSafetyMeasures  String?
  landType            String?

  // This sets up the one-to-one relationship with the Warehouse table.
  // @unique ensures one warehouse can only have one set of derived data.
  warehouseId         Int       @unique
  warehouse           Warehouse @relation(fields: [warehouseId], references: [id], onDelete: Cascade)
}
